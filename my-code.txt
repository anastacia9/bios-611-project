geom_bar(stat="identity", show.legend = FALSE) +
scale_x_discrete(guide = guide_axis(angle = 90)) +
facet_grid(YEAR ~ ., scales = "free_y") +
coord_cartesian(ylim = c(0, 4500)) +
labs(x = "State",
y = "Annual Rainfall (mm)",
title = "Barplot of annual rainfall for years 1901, 1925, 1950,
1975, 2000, and 2017")
bars
#ggsave("figures/quarter_century_rainfall.png", bars)
### Assign colors to dataframe
entrys <- latlong$SUBDIVISION %>% length()
shades <- rep('', entrys)
for (i in 1:entrys){
distances <- latlong$median[i]-breaks > 0
shades[i] <- colors[distances %>% which() %>% max()]}
latlong$colorful <- shades
### Basic barplots of annual rainfall for 1901, 1925, 1950, 1975, 2000, and 2017
years <- c(1901,1925,1950,1975,2000,2017)
rains.per25years <- rains %>%
filter(YEAR %in% years) %>%
merge(latlong[c('SUBDIVISION', 'colorful')],
by=c("SUBDIVISION"))
meds.factor <- factor(rains.per25years$SUBDIVISION, levels=meds.order)
rains.per25years <- rains.per25years[order(meds.factor),]
rains.per25years$SUBDIVISION <- factor(rains.per25years$SUBDIVISION,
levels = meds.order)
bars <- ggplot(data=rains.per25years, aes(x=SUBDIVISION, y=ANNUAL/1000,
fill=colorful)) +
geom_bar(stat="identity", show.legend = FALSE) +
scale_x_discrete(guide = guide_axis(angle = 90)) +
facet_grid(YEAR ~ ., scales = "free_y") +
coord_cartesian(ylim = c(0, 4.5)) +
labs(x = "State",
y = "Annual Rainfall (mm)",
title = "Barplot of annual rainfall for years 1901, 1925, 1950,
1975, 2000, and 2017")
bars
#ggsave("figures/quarter_century_rainfall.png", bars)
### Assign colors to dataframe
entrys <- latlong$SUBDIVISION %>% length()
shades <- rep('', entrys)
for (i in 1:entrys){
distances <- latlong$median[i]-breaks > 0
shades[i] <- colors[distances %>% which() %>% max()]}
latlong$colorful <- shades
### Basic barplots of annual rainfall for 1901, 1925, 1950, 1975, 2000, and 2017
years <- c(1901,1925,1950,1975,2000,2017)
rains.per25years <- rains %>%
filter(YEAR %in% years) %>%
merge(latlong[c('SUBDIVISION', 'colorful')],
by=c("SUBDIVISION"))
meds.factor <- factor(rains.per25years$SUBDIVISION, levels=meds.order)
rains.per25years <- rains.per25years[order(meds.factor),]
rains.per25years$SUBDIVISION <- factor(rains.per25years$SUBDIVISION,
levels = meds.order)
bars <- ggplot(data=rains.per25years, aes(x=SUBDIVISION, y=ANNUAL/1000,
fill=colorful)) +
geom_bar(stat="identity", show.legend = FALSE) +
scale_x_discrete(guide = guide_axis(angle = 90)) +
facet_grid(YEAR ~ ., scales = "free_y") +
coord_cartesian(ylim = c(0, 4.5)) +
labs(x = "State",
y = "Annual Rainfall (meters)",
title = "Barplot of annual rainfall for years 1901, 1925, 1950,
1975, 2000, and 2017")
bars
#ggsave("figures/quarter_century_rainfall.png", bars)
### Create a boxplot of annual rainfall per state
ggplot(rains, aes(x=reorder(SUBDIVISION,ANNUAL), y=ANNUAL/1000)) +
scale_x_discrete(guide = guide_axis(angle = 90)) +
labs(x = "State", y = "Annual Rainfall (meters)") +
geom_boxplot()
### Median monthly rainfall for each state
rains.col <- merge(rains, latlong[c('SUBDIVISION', 'colorful')],
by=c("SUBDIVISION"))
indexs <- c(1,2,3,4,6,7,8,9,10)
graphs <- list()
count  <- 1
for(i in indexs){
rains.info <- rains.col %>%
filter(colorful %in% colors[i]) %>%
pivot_longer(
cols = JAN:DEC,
names_to = "month",
values_to = "rainfall") %>%
group_by(month,SUBDIVISION) %>%
summarise_at(vars(rainfall),
list(median=median,
Q1=~quantile(., probs = 0.25),
Q3=~quantile(., probs = 0.75)))
rains.info$month <- factor(rains.info$month, levels = c("JAN", "FEB", "MAR",
"APR", "MAY", "JUN",
"JUL", "AUG", "SEP",
"OCT", "NOV", "DEC"))
graphs[[count]] <- ggplot(rains.info, aes(month, median, color=SUBDIVISION,
group=SUBDIVISION)) +
geom_point() +
geom_line() +
#geom_errorbar(aes(ymin = Q1, ymax = Q3)) +
labs(x = "month",
y = "median rainfall between 1901 and 2017") +
scale_y_continuous(limits = c(0, 650))
ggsave(paste('figures/median_monthly_rainfall_lineplot',as.character(count),'.png',
sep=''), graphs[[count]] )
count <- count + 1
}
graphs
### Median monthly rainfall for each state
rains.col <- merge(rains, latlong[c('SUBDIVISION', 'colorful')],
by=c("SUBDIVISION"))
indexs <- c(1,2,3,4,6,7,8,9,10)
graphs <- list()
count  <- 1
for(i in indexs){
rains.info <- rains.col %>%
filter(colorful %in% colors[i]) %>%
pivot_longer(
cols = JAN:DEC,
names_to = "month",
values_to = "rainfall") %>%
group_by(month,SUBDIVISION) %>%
summarise_at(vars(rainfall),
list(median=median,
Q1=~quantile(., probs = 0.25),
Q3=~quantile(., probs = 0.75)))
rains.info$month <- factor(rains.info$month, levels = c("JAN", "FEB", "MAR",
"APR", "MAY", "JUN",
"JUL", "AUG", "SEP",
"OCT", "NOV", "DEC"))
graphs[[count]] <- ggplot(rains.info, aes(month, median, color=SUBDIVISION,
group=SUBDIVISION)) +
geom_point() +
geom_line() +
#geom_errorbar(aes(ymin = Q1, ymax = Q3)) +
labs(x = "month",
y = "median rainfall between 1901 and 2017") +
scale_y_continuous(limits = c(0, 650))
ggsave(paste('figures/median_monthly_rainfall_lineplot',as.character(count),'.png',
sep=''), graphs[[count]] )
count <- count + 1
}
graphs
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Non-normalized
nnorms <- ggplot(data=meds, aes(x=median, y=stdev)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall",
y = "Standard Deviation in Annual Rainfall",
title = "Line plot of median annual rainfall vs. the standard deviation in annual rainfall")
ggsave("figures/lineplot_median_stdev_rainfall.png", nnorms)
nnorms
# Normalized
norms <- ggplot(data=meds, aes(x=median, y=stdev.norm)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall",
y = "Scaled Standard Deviation in Annual Rainfall",
title = "Line plot of median annual rainfall vs. the scaled standard deviation in annual rainfall\n(standard deviation divided by median)")
ggsave("figures/lineplot_median_norm_stdev_rainfall.png", norms)
norms
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Non-normalized
nnorms <- ggplot(data=meds, aes(x=median, y=stdev)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall",
y = "Standard Deviation in Annual Rainfall",
title = "Line plot of median annual rainfall vs. the standard deviation in annual rainfall")
ggsave("figures/lineplot_median_stdev_rainfall.png", nnorms)
nnorms
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Non-normalized
nnorms <- ggplot(data=meds, aes(x=median, y=stdev)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall",
y = "Standard Deviation in Annual Rainfall",
title = "Line plot of median annual rainfall vs. the standard deviation in annual rainfall")
#ggsave("figures/lineplot_median_stdev_rainfall.png", nnorms)
nnorms
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Normalized
norms <- ggplot(data=meds, aes(x=median, y=stdev.norm)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall",
y = "Scaled Standard Deviation in Annual Rainfall",
title = "Line plot of median annual rainfall vs. the scaled standard deviation in annual rainfall\n(standard deviation divided by median)")
ggsave("figures/lineplot_median_norm_stdev_rainfall.png", norms)
norms
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Normalized
norms <- ggplot(data=meds, aes(x=median, y=stdev.norm)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall",
y = "Scaled Standard Deviation in Annual Rainfall",
title = "Line plot of median annual rainfall vs. the scaled standard deviation in annual rainfall\n(standard deviation divided by median)")
#ggsave("figures/lineplot_median_norm_stdev_rainfall.png", norms)
norms
### Read in crops data (annual per Indian state from 1901-2017)
crops <- read.csv("data/india_crops.csv")
### Standardize state labels
### These state names are most accurate according to "knowindia.india.gov.in"
crops.state <- unique(crops$State_Name)
crops <- crops %>%
mutate(State_Name = replace(State_Name,
State_Name=="Assam"|State_Name=='Meghalaya',
"Assam and Meghalaya")) %>%
mutate(State_Name = replace(State_Name,
State_Name=="Chandigarh"|State_Name=='Haryana',
"Chandigarh and Haryana")) %>%
mutate(State_Name = replace(State_Name,
State_Name=="Goa"|State_Name=='Maharashtra',
"Goa and Maharashtra")) %>%
mutate(State_Name = replace(State_Name,
State_Name=="Manipur"|State_Name=='Mizoram'|
State_Name=='Nagaland'|State_Name=='Tripura',
"Nagaland, Manipur, Mizoram, Tripura")) %>%
mutate(State_Name = replace(State_Name,
State_Name=="Sikkim"|State_Name=='West Bengal',
"Sikkim and West Bengal")) %>%
mutate(State_Name = replace(State_Name,
State_Name=="Jammu and Kashmir ",
"Jammu and Kashmir")) %>%
mutate(State_Name = replace(State_Name,
State_Name=="Telangana ",
"Telangana")) %>%
filter(!State_Name %in% c('Dadra and Nagar Haveli','Puducherry')) %>%
select(State_Name, Crop_Year, Crop, Area, Production)
### Re-group according to new labels
crops <- crops %>%
group_by(State_Name, Crop_Year, Crop) %>%
dplyr::summarize(Area=sum(Area), Production=sum(Production))
### Which crops appear most frequently?
crop.counts <- crops$Crop %>% table() %>% stack() %>% rev()
crop.counts <- crop.counts[order(crop.counts$values, decreasing=T), ]
head(crop.counts,15)
freq.hi <- crop.counts$ind[1:50]
### Get total crop area and production for each state per year
crops.area.wide <- crops[,c('State_Name','Crop_Year','Crop', 'Area')] %>%
pivot_wider(names_from = Crop, values_from = Area) %>%
replace(is.na(.), 0)
crops.prod.wide <- crops[,c('State_Name','Crop_Year','Crop', 'Production')] %>%
pivot_wider(names_from = Crop, values_from = Production) %>%
replace(is.na(.), 0)
### Which crops are most heavily produced over time?
prod.sort <- crops.prod.wide[3:126] %>%
colSums() %>%
sort(decreasing=T) %>%
data.frame()
colnames(prod.sort) <- c('sum_production')
head(prod.sort,15)
prod.hi <- rownames(prod.sort)[1:50]
### Which crops cover the most area over time?
area.sort <- crops.area.wide[3:126] %>%
colSums() %>%
sort(decreasing=T) %>%
data.frame()
colnames(area.sort) <- c('sum_area')
head(area.sort,15)
area.hi <- rownames(area.sort)[1:50]
crops.area.wide[3:126]
crops.area.wide
### Which crops cover the most area over time?
area.sort <- crops.area.wide[3:126] %>%
colSums() %>%
sort(decreasing=T) %>%
data.frame()
colnames(area.sort) <- c('sum_area')
head(area.sort,15)
area.hi <- rownames(area.sort)[1:50]
min(crops$Crop_Year)
max(crops$Crop_Year)
2014-1996
1533026391/18
1533026391/18/1000000
746509102/19
746509102/18
746509102/18/1000000
### Run a PCA on median crop production
common.crops <- intersect(freq.hi, intersect(area.hi, prod.hi))
monthly.med <- aggregate(crops.area.wide[,common.crops], list(crops.area.wide$State_Name), median) %>%
column_to_rownames(var="Group.1")
monthly.pca <- prcomp(monthly.med, center = F,scale = F)
ggbiplot(monthly.pca, labels=rownames(monthly.med), varname.size=1.5, labels.size=2)+ coord_equal(ratio = 0.3)
### Run a PCA on median crop production
common.crops <- intersect(freq.hi, intersect(area.hi, prod.hi))
monthly.med <- aggregate(crops.area.wide[,common.crops], list(crops.area.wide$State_Name), median) %>%
column_to_rownames(var="Group.1")
monthly.pca <- prcomp(monthly.med, center = F,scale = F)
ggbiplot(monthly.pca, labels=rownames(monthly.med), varname.size=1.5, labels.size=2)+ coord_equal(ratio = 0.3)
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value/1e6, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
### Median monthly rainfall for each state
rains.col <- merge(rains, latlong[c('SUBDIVISION', 'colorful')],
by=c("SUBDIVISION"))
indexs <- c(1,2,3,4,6,7,8,9,10)
graphs <- list()
count  <- 1
for(i in indexs){
rains.info <- rains.col %>%
filter(colorful %in% colors[i]) %>%
pivot_longer(
cols = JAN:DEC,
names_to = "month",
values_to = "rainfall") %>%
group_by(month,SUBDIVISION) %>%
summarise_at(vars(rainfall),
list(median=median,
Q1=~quantile(., probs = 0.25),
Q3=~quantile(., probs = 0.75)))
rains.info$month <- factor(rains.info$month, levels = c("JAN", "FEB", "MAR",
"APR", "MAY", "JUN",
"JUL", "AUG", "SEP",
"OCT", "NOV", "DEC"))
graphs[[count]] <- ggplot(rains.info, aes(month, median, color=SUBDIVISION,
group=SUBDIVISION)) +
geom_point() +
geom_line() +
#geom_errorbar(aes(ymin = Q1, ymax = Q3)) +
labs(x = "month",
y = "median rainfall (mm) between 1901 and 2017") +
scale_y_continuous(limits = c(0, 650))
ggsave(paste('figures/median_monthly_rainfall_lineplot',as.character(count),'.png',
sep=''), graphs[[count]] )
count <- count + 1
}
graphs
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Non-normalized
nnorms <- ggplot(data=meds, aes(x=median/1000, y=stdev)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall (meters)",
y = "Standard Deviation in Annual Rainfall")
#ggsave("figures/lineplot_median_stdev_rainfall.png", nnorms)
nnorms
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Normalized
norms <- ggplot(data=meds, aes(x=median/1000, y=stdev.norm)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall (meters)",
y = "Scaled Standard Deviation in Annual Rainfall",
title = "Line plot of median annual rainfall vs. the scaled standard deviation in annual rainfall\n(standard deviation divided by median)")
#ggsave("figures/lineplot_median_norm_stdev_rainfall.png", norms)
norms
### Comparison of median annual rainfall and the standard deviation in annual rainfall
# Normalized
norms <- ggplot(data=meds, aes(x=median/1000, y=stdev.norm)) +
geom_line() +
geom_point() +
labs(x = "Median Annual Rainfall (meters)",
y = "Scaled Standard Deviation in Annual Rainfall")
#ggsave("figures/lineplot_median_norm_stdev_rainfall.png", norms)
norms
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall (tonnes)")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production (tonnes)",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall (mm)")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production (tonnes)",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall (mm)")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production (tonnes)",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
mycrops
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production (tonnes)",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
### Focus on Rice and Wheat, two very thirsty crops
mycrops <- common.crops[rev(order(prod.sort[common.crops,]))][2:11]
focus.crops <- c('State_Name','Crop_Year', mycrops)
focus.area <- crops.area.wide[,focus.crops]
focus.prod <- crops.prod.wide[,focus.crops]
focus.prod.Y <- ddply(focus.prod, "Crop_Year", numcolwise(sum))
rains.Y <- rains.sum.annual %>% subset(YEAR %in% focus.prod.Y$Crop_Year)
focus.prod.Y$Rain <- rains.Y$ANNUAL
ggplot(focus.prod.Y %>%
select(-Sugarcane, -Jute, -Banana, -Rain) %>%
pivot_longer(!Crop_Year), aes(x = Crop_Year, y = value, color = name)) +
geom_line() +
geom_line(data=focus.prod.Y, aes(x=Crop_Year, y=Rain*2000), color = "red") +
scale_x_continuous(breaks=seq(1997, 2015), guide = guide_axis(angle = 90)) +
scale_y_continuous(
name = "Annual Crop Production (tonnes)",
sec.axis = sec_axis(~ . * 1/2000, name="Median Annual Rainfall")) +
xlab('Year') +
theme(panel.grid.minor.x = element_blank())
rains.sum.annual
savehistory(file = "my-code.txt")
